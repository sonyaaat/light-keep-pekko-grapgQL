# Journal
pekko.persistence.journal.plugin = "pekko.persistence.cassandra.journal"
pekko.persistence.cassandra.journal.keyspace-autocreate = true
pekko.persistence.cassandra.journal.tables-autocreate = true
datastax-java-driver.advanced.reconnect-on-init = true
pekko.persistence.cassandra.events-by-tag.pubsub-notification = on
pekko.persistence.cassandra.query.refresh-interval = 2s

# Snapshot
pekko.persistence.snapshot-store.plugin = "pekko.persistence.cassandra.snapshot"
pekko.persistence.cassandra.snapshot.keyspace-autocreate = true
pekko.persistence.cassandra.snapshot.tables-autocreate = true

pekko.actor.allow-java-serialization = off
pekko.actor.provider = "cluster"


//db.default.poolInitialSize = 5
//db.default.poolMaxSize = 7
//# poolConnectionTimeoutMillis defines the amount of time a query will wait to acquire a connection
//# before throwing an exception. This used to be called `connectionTimeoutMillis`.
//db.default.poolConnectionTimeoutMillis = 1000
//db.default.poolValidationQuery = "select 1 as one"
//db.default.poolFactoryName = "commons-dbcp2"

pekko.http.cors {
  allowed-origins = "*"
  allowed-headers = "*"
  allowed-methods = ["GET", "POST", "HEAD", "OPTIONS", "PUT","DELETE"]
}

pekko.cluster.sharding {
  number-of-shards = 1000
}
pekko {
  actor {
    provider = "cluster"

    serialization-bindings {
      "com.example.lib.JsonSerializable" = jackson-json
    }
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 7354
    }
  }
  cluster {
    seed-nodes = [
      "pekko://text-card@127.0.0.1:7354",

    ]


    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
    sharding {
      number-of-shards = 1000
      passivation {
        strategy = default-strategy
      }
    }
  }
}


// Postgres JDBC settings
db.default {
  driver = "org.postgresql.Driver"
  url = "jdbc:postgresql://localhost/lite-keep"
  user = "lite-keep"
  password = "lite-keep"
}
